// Generated by CoffeeScript 1.7.1
(function() {
  define(function(require, exports, module) {
    var TabSwitch, makeToggleFocusable, node, _ref;
    _ref = require('lib/utils'), node = _ref.node, makeToggleFocusable = _ref.makeToggleFocusable;
    TabSwitch = Backbone.View.extend({
      className: 'tabswitch selectable',
      template: require('lib/templates/tab_switch'),
      events: {
        'click': 'onClick',
        'click .option-format': 'onFormatClick'
      },
      initialize: function() {
        this.project = app.console.project;
        this.project.on('change:tabSize', this.render, this);
        this.project.on('change:softTabs', this.render, this);
        app.console.state.on('change:selectedUrl', this.render, this);
        this.$el.attr({
          tabIndex: '3'
        });
        makeToggleFocusable(this.el);
        return this.render();
      },
      render: function() {
        var softTabs, state, tabSize;
        this.$el.html(this.template());
        tabSize = this.project.get('tabSize');
        softTabs = this.project.get('softTabs');
        state = app.console.state;
        this.$(".option-size-" + tabSize).addClass('is-selected');
        this.$el.toggleClass('no-formatting', !(state.get('selectedUrl').match(/css$/) && state.get('selectedType') === 'css'));
        if (softTabs) {
          this.$('.option-type').addClass('is-selected');
        }
        this.$('.selection').html((softTabs ? 'Soft tabs:' : 'Tab size:') + (" <span>" + tabSize + "</span>"));
        return this;
      },
      onFormatClick: function() {
        return app.console.editor.formatCurrentFile();
      },
      onClick: function(e) {
        var tabsize, target;
        target = $(e.target);
        if (target.hasClass('option-size')) {
          tabsize = target[0].getAttribute('data-tabsize');
          this.project.save({
            tabSize: parseInt(tabsize)
          });
        }
        if (target.hasClass('option-type')) {
          return this.project.save({
            softTabs: !this.project.get('softTabs')
          });
        }
      }
    });
    return module.exports = TabSwitch;
  });

}).call(this);
