// Generated by CoffeeScript 1.7.1
(function() {
  var callWorker, callbacks, cycle, fork, makeWorker, numWorkers, onMessage, os, workers;

  os = require('os');

  fork = require('child_process').fork;

  numWorkers = Math.min(os.cpus().length, 4);

  workers = [];

  callbacks = {};

  cycle = 0;

  onMessage = function(_arg) {
    var callbackId, cb, response, task, _ref;
    callbackId = _arg.callbackId, response = _arg.response;
    if (_ref = callbacks[callbackId], task = _ref.task, cb = _ref.cb, _ref) {
      if (task === 'renderStylus') {
        cb(response.err, response.css, response.imports);
      } else if (task === 'getStylusOutline') {
        cb(response.nodes, response.css);
      }
      return delete callbacks[callbackId];
    }
  };

  makeWorker = function() {
    var worker;
    worker = fork(__dirname + '/stylus_worker');
    return worker.on("message", onMessage);
  };

  callWorker = function(name, params, cb) {
    var worker;
    if (workers.length <= cycle) {
      worker = makeWorker();
      workers.push(worker);
    } else {
      worker = workers[cycle];
    }
    cycle++;
    if (cycle >= numWorkers) {
      cycle = 0;
    }
    params.task = name;
    params.callbackId = ~~(Math.random() * 1e9);
    callbacks[params.callbackId] = params;
    params.cb = cb;
    return worker.send(params);
  };

  exports.getStylusOutline = function(options, cb) {
    return callWorker('getStylusOutline', {
      options: options
    }, cb);
  };

  exports.renderStylus = function(path, data, cb) {
    return callWorker('renderStylus', {
      path: path,
      data: data
    }, cb);
  };

}).call(this);
